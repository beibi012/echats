{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { isEqual, capitalize } from 'element-ui/src/utils/util';\nimport { isDef } from 'element-ui/src/utils/shared';\nlet uid = 0;\nexport default class Node {\n  constructor(data, config, parentNode) {\n    this.data = data;\n    this.config = config;\n    this.parent = parentNode || null;\n    this.level = !this.parent ? 1 : this.parent.level + 1;\n    this.uid = uid++;\n    this.initState();\n    this.initChildren();\n  }\n  initState() {\n    const {\n      value: valueKey,\n      label: labelKey\n    } = this.config;\n    this.value = this.data[valueKey];\n    this.label = this.data[labelKey];\n    this.pathNodes = this.calculatePathNodes();\n    this.path = this.pathNodes.map(node => node.value);\n    this.pathLabels = this.pathNodes.map(node => node.label);\n\n    // lazy load\n    this.loading = false;\n    this.loaded = false;\n  }\n  initChildren() {\n    const {\n      config\n    } = this;\n    const childrenKey = config.children;\n    const childrenData = this.data[childrenKey];\n    this.hasChildren = Array.isArray(childrenData);\n    this.children = (childrenData || []).map(child => new Node(child, config, this));\n  }\n  get isDisabled() {\n    const {\n      data,\n      parent,\n      config\n    } = this;\n    const disabledKey = config.disabled;\n    const {\n      checkStrictly\n    } = config;\n    return data[disabledKey] || !checkStrictly && parent && parent.isDisabled;\n  }\n  get isLeaf() {\n    const {\n      data,\n      loaded,\n      hasChildren,\n      children\n    } = this;\n    const {\n      lazy,\n      leaf: leafKey\n    } = this.config;\n    if (lazy) {\n      const isLeaf = isDef(data[leafKey]) ? data[leafKey] : loaded ? !children.length : false;\n      this.hasChildren = !isLeaf;\n      return isLeaf;\n    }\n    return !hasChildren;\n  }\n  calculatePathNodes() {\n    const nodes = [this];\n    let parent = this.parent;\n    while (parent) {\n      nodes.unshift(parent);\n      parent = parent.parent;\n    }\n    return nodes;\n  }\n  getPath() {\n    return this.path;\n  }\n  getValue() {\n    return this.value;\n  }\n  getValueByOption() {\n    return this.config.emitPath ? this.getPath() : this.getValue();\n  }\n  getText(allLevels, separator) {\n    return allLevels ? this.pathLabels.join(separator) : this.label;\n  }\n  isSameNode(checkedValue) {\n    const value = this.getValueByOption();\n    return this.config.multiple && Array.isArray(checkedValue) ? checkedValue.some(val => isEqual(val, value)) : isEqual(checkedValue, value);\n  }\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n    this.children.forEach(child => {\n      if (child) {\n        // bottom up\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n  emit(event, ...args) {\n    const {\n      parent\n    } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n  onChildCheck() {\n    const {\n      children\n    } = this;\n    const validChildren = children.filter(child => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every(child => child.checked) : false;\n    this.setCheckState(checked);\n  }\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = checked;\n    this.indeterminate = checkedNum !== totalNum && checkedNum > 0;\n  }\n  syncCheckState(checkedValue) {\n    const value = this.getValueByOption();\n    const checked = this.isSameNode(checkedValue, value);\n    this.doCheck(checked);\n  }\n  doCheck(checked) {\n    if (this.checked !== checked) {\n      if (this.config.checkStrictly) {\n        this.checked = checked;\n      } else {\n        // bottom up to unify the calculation of the indeterminate state\n        this.broadcast('check', checked);\n        this.setCheckState(checked);\n        this.emit('check');\n      }\n    }\n  }\n}","map":{"version":3,"names":["isEqual","capitalize","isDef","uid","Node","constructor","data","config","parentNode","parent","level","initState","initChildren","value","valueKey","label","labelKey","pathNodes","calculatePathNodes","path","map","node","pathLabels","loading","loaded","childrenKey","children","childrenData","hasChildren","Array","isArray","child","isDisabled","disabledKey","disabled","checkStrictly","isLeaf","lazy","leaf","leafKey","length","nodes","unshift","getPath","getValue","getValueByOption","emitPath","getText","allLevels","separator","join","isSameNode","checkedValue","multiple","some","val","broadcast","event","args","handlerName","forEach","emit","onParentCheck","checked","setCheckState","onChildCheck","validChildren","filter","every","totalNum","checkedNum","reduce","c","p","num","indeterminate","syncCheckState","doCheck"],"sources":["/Users/zrs/Desktop/lx/myapp2.0/node_modules/element-ui/packages/cascader-panel/src/node.js"],"sourcesContent":["import { isEqual, capitalize } from 'element-ui/src/utils/util';\nimport { isDef } from 'element-ui/src/utils/shared';\n\nlet uid = 0;\n\nexport default class Node {\n\n  constructor(data, config, parentNode) {\n    this.data = data;\n    this.config = config;\n    this.parent = parentNode || null;\n    this.level = !this.parent ? 1 : this.parent.level + 1;\n    this.uid = uid++;\n\n    this.initState();\n    this.initChildren();\n  }\n\n  initState() {\n    const { value: valueKey, label: labelKey } = this.config;\n\n    this.value = this.data[valueKey];\n    this.label = this.data[labelKey];\n    this.pathNodes = this.calculatePathNodes();\n    this.path = this.pathNodes.map(node => node.value);\n    this.pathLabels = this.pathNodes.map(node => node.label);\n\n    // lazy load\n    this.loading = false;\n    this.loaded = false;\n  }\n\n  initChildren() {\n    const { config } = this;\n    const childrenKey = config.children;\n    const childrenData = this.data[childrenKey];\n    this.hasChildren = Array.isArray(childrenData);\n    this.children = (childrenData || []).map(child => new Node(child, config, this));\n  }\n\n  get isDisabled() {\n    const { data, parent, config } = this;\n    const disabledKey = config.disabled;\n    const { checkStrictly } = config;\n    return data[disabledKey] ||\n      !checkStrictly && parent && parent.isDisabled;\n  }\n\n  get isLeaf() {\n    const { data, loaded, hasChildren, children } = this;\n    const { lazy, leaf: leafKey } = this.config;\n    if (lazy) {\n      const isLeaf = isDef(data[leafKey])\n        ? data[leafKey]\n        : (loaded ? !children.length : false);\n      this.hasChildren = !isLeaf;\n      return isLeaf;\n    }\n    return !hasChildren;\n  }\n\n  calculatePathNodes() {\n    const nodes = [this];\n    let parent = this.parent;\n\n    while (parent) {\n      nodes.unshift(parent);\n      parent = parent.parent;\n    }\n\n    return nodes;\n  }\n\n  getPath() {\n    return this.path;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  getValueByOption() {\n    return this.config.emitPath\n      ? this.getPath()\n      : this.getValue();\n  }\n\n  getText(allLevels, separator) {\n    return allLevels ? this.pathLabels.join(separator) : this.label;\n  }\n\n  isSameNode(checkedValue) {\n    const value = this.getValueByOption();\n    return this.config.multiple && Array.isArray(checkedValue)\n      ? checkedValue.some(val => isEqual(val, value))\n      : isEqual(checkedValue, value);\n  }\n\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n\n    this.children.forEach(child => {\n      if (child) {\n        // bottom up\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n\n  emit(event, ...args) {\n    const { parent } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n\n  onChildCheck() {\n    const { children } = this;\n    const validChildren = children.filter(child => !child.isDisabled);\n    const checked = validChildren.length\n      ? validChildren.every(child => child.checked)\n      : false;\n\n    this.setCheckState(checked);\n  }\n\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : (p.indeterminate ? 0.5 : 0);\n      return c + num;\n    }, 0);\n\n    this.checked = checked;\n    this.indeterminate = checkedNum !== totalNum && checkedNum > 0;\n  }\n\n  syncCheckState(checkedValue) {\n    const value = this.getValueByOption();\n    const checked = this.isSameNode(checkedValue, value);\n\n    this.doCheck(checked);\n  }\n\n  doCheck(checked) {\n    if (this.checked !== checked) {\n      if (this.config.checkStrictly) {\n        this.checked = checked;\n      } else {\n        // bottom up to unify the calculation of the indeterminate state\n        this.broadcast('check', checked);\n        this.setCheckState(checked);\n        this.emit('check');\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}